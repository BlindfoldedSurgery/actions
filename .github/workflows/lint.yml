on:
  workflow_call:
    inputs:
      build-tool:
        type: string
        required: false
        default: poetry
      python-version:
        required: true
        type: string
      debian-version:
        required: false
        type: string
        default: bookworm
      context-path:
        required: false
        type: string
        default: src/

jobs:
  lint:
    runs-on: ubuntu-24.04
    container: python:${{ inputs.python-version }}-slim-${{ inputs.debian-version }}
    env:
      # renovate: datasource=pypi depName=pipx
      PIPX_VERSION: "==1.7.*"
      # renovate: datasource=pypi depName=uv versioning=semver-coerced
      UV_VERSION: 0.5.6
    steps:
      - run: |
          pip install "pipx${PIPX_VERSION}"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
        if: inputs.build-tool == 'poetry'
      - run: pipx install poetry==1.8.4
        if: inputs.build-tool == 'poetry'
      - name: Install uv
        if: inputs.build-tool == 'uv'
        uses: astral-sh/setup-uv@v4
        with:
          version: ${{ env.UV_VERSION }}
      - uses: actions/checkout@v4
      - run: poetry install --all-extras --no-interaction --no-ansi
        if: inputs.build-tool == 'poetry'
      - run: uv sync --all-extras
        if: inputs.build-tool == 'uv'
      - name: Check coding standards
        run: |
          ${{ inputs.build-tool }} run ruff format --check ${{ inputs.context-path }}
          ${{ inputs.build-tool }} run ruff check ${{ inputs.context-path }}
          ${{ inputs.build-tool }} run mypy ${{ inputs.context-path }}
