on:
  workflow_call:
    inputs:
      build-tool:
        type: string
        required: false
        default: poetry
      python-version:
        required: true
        type: string
      debian-version:
        required: false
        type: string
        default: bookworm
      pypi-username:
        required: true
        type: string
      repo-name:
        required: false
        type: string
        default: pypi-bs
    secrets:
      pypi-password:
        required: true

jobs:
  publish-package:
    runs-on: ubuntu-24.04
    container: python:${{ inputs.python-version }}-slim-${{ inputs.debian-version }}
    env:
      # renovate: datasource=pypi depName=pipx
      PIPX_VERSION: "==1.7.*"
      # renovate: datasource=pypi depName=uv versioning=semver-coerced
      UV_VERSION: 0.5.11
    steps:
      - run: |
          pip install "pipx${PIPX_VERSION}"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
        if: inputs.build-tool == 'poetry'
      - run: pipx install poetry==1.8.5
        if: inputs.build-tool == 'poetry'
      - name: Install uv
        if: inputs.build-tool == 'uv'
        uses: astral-sh/setup-uv@v4
        with:
          version: ${{ env.UV_VERSION }}
      - uses: actions/checkout@v4
      - run: poetry install --all-extras --no-interaction --no-ansi
        if: inputs.build-tool == 'poetry'
      - run: uv sync --all-extras
        if: inputs.build-tool == 'uv'
      - name: Build project
        run: ${{ inputs.build-tool }} build
      - name: Upload to pypi registry
        if: inputs.build-tool == 'poetry'
        run: |
          poetry config "http-basic.${{ inputs.repo-name }}" \
          "${{ inputs.pypi-username }}" \
          "${{ secrets.pypi-password }}"
          poetry publish -r ${{ inputs.repo-name }}
      - name: Upload to pypi registry
        if: inputs.build-tool == 'uv'
        env:
          UV_PUBLISH_USERNAME: ${{ inputs.pypi-username }}
          UV_PUBLISH_PASSWORD: ${{ secrets.pypi-password }}
        run: |
          uv publish
